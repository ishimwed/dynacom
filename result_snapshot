rm -r -f ball_bins3/ binary_search/ bst_copy/ closest/ merge_sort/ bubble_sort/ factorial/ fibonacci/ hanoi/ heap_sort/ inorder/ insertion_sort/ karatsuba/ postorder/ quick_sort/ reverse_stack/ selection_sort/ stack_sort/ strassen/ subset_sum/ ackermann/ bstcopy/ copy/ qsortassert/
Running  ./ball_bins3.py
Running  ./binary_search.py
Running  ./bst_copy.py
Running  ./bubble_sort.py
Running  ./closest.py
Running  ./factorial.py
Running  ./fibonacci.py
Running  ./hanoi.py
Running  ./heap_sort.py
Running  ./insertion_sort.py
Running  ./karatsuba.py
Running  ./merge_sort.py
Running  ./qsortassert.py
Running  ./quick_sort.py
Running  ./reverse_stack.py
Running  ./selection_sort.py
Running  ./stack_sort.py
Running  ./strassen.py
Running  ./subset_sum.py
Running  ./sum.py
Running  ./tree_traversal.py
-./ball_bins3
diff 1.0 coef 1.4337066390228699
T(n-1)
diff 1.0 coef 1.432926522957686
T(n-1)
diff 1.0 coef 1.4331459869679424
T(n-1)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./ball_bins3/traces -maxdeg 5 -r -nlog
b'Polynomial relation:  1
k=0 p=0
'
T(n) = T(n-1) +  T(n-1) +  T(n-1) +  (n^0(logn)^0)
Solving the recurrence relation
Analysis complete in 3.273 seconds
b'Complexity is O(3^n)\n'




-./binary_search
diff 22.0 coef 2.0973667967608995
T(n/2)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./binary_search/traces -maxdeg 5 -r -nlog
b'Polynomial relation:  1
k=0 p=0
'
T(n) = T(n/2) +  (n^0(logn)^0)
Solving the recurrence relation
Analysis complete in 0.629 seconds
b'Complexity is O(n^0.0 logn)\n'




-./bstcopy
diff -1.0 coef 0.8876874852892002
T(n-1)
diff -1.0 coef 0.887018598201334
T(n-1)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./bstcopy/traces -maxdeg 5 -r -nlog
b'Polynomial relation:  1
k=0 p=0
'
T(n) = T(n-1) +  T(n-1) +  (n^0(logn)^0)
Solving the recurrence relation
Analysis complete in 0.727 seconds
b'Complexity is O(2^n)\n'




-./bubble_sort
diff 1.0 coef 1.018041128225504
T(n-1)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./bubble_sort/traces -maxdeg 5 -r -nlog
b'models before applying heuristics
 
254
 
0.9967 x - 5.085
           2
1.773e-05 x + 0.9874 x - 4.279
            3             2
-7.602e-08 x + 7.562e-05 x + 0.9757 x - 3.764
           4             3             2
1.628e-09 x - 1.743e-06 x + 0.0006285 x + 0.9113 x - 1.98
           5             4             3           2
3.316e-12 x - 2.589e-09 x + 1.692e-07 x + 0.00026 x + 0.939 x - 2.512
Models after applying Heuristics  [poly1d([254.05]), poly1d([ 0.99667277, -5.08492065])]
r2_scores  [-0.011517986094283783, 0.999852028651741]
log:  
1 x - 3.295e-15, r2_score -1.7567516876154827
-1.7567516876154827
Analysis complete in 0.0023806095123291016 seconds
Polynomial relation:  n^1
k=1 p=0
'
T(n) = T(n-1) +  (n^1(logn)^0)
Solving the recurrence relation
Analysis complete in 0.694 seconds
b'Complexity is O(n^2)\n'




-./closest
diff 5.0 coef 2.4136096994610527
T(n/2)
diff 4.0 coef 2.1057592795258615
T(n/2)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./closest/traces -maxdeg 5 -r -nlog
b'models before applying heuristics
 
903
 
1.026 x + 534.2
           2
-0.004547 x + 3.842 x + 167.7
           3           2
6.994e-05 x - 0.06566 x + 19.3 x - 835.6
           4             3           2
3.358e-07 x - 0.0003061 x + 0.07634 x - 1.038 x - 6.738
            5             4            3          2
-3.394e-09 x + 4.938e-06 x - 0.002579 x + 0.5691 x - 44.89 x + 1124
Models after applying Heuristics  [poly1d([903.04]), poly1d([  1.02585856, 534.15152124])]
r2_scores  [-0.004105321333620404, -0.0014901311381936289]
log:  
1 x + 4.831e-14, r2_score -1.1764866058942358
-1.1764866058942358
Analysis complete in 0.0023953914642333984 seconds
Polynomial relation:  log n
k=0 p=1
'
T(n) = T(n/2) +  T(n/2) +  (n^0(logn)^1)
Solving the recurrence relation
Analysis complete in 0.629 seconds
b'Complexity is O(n^1.0)\n'




-./copy
diff 1.0 coef 3.493083511145941
T(n/3)
diff 1.0 coef 1.2958961718634088
T(n-1)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./copy/traces -maxdeg 5 -r -nlog
b'Polynomial relation:  1
k=0 p=0
'
T(n) = T(n/3) +  T(n-1) +  (n^0(logn)^0)
Solving the recurrence relation
Analysis complete in 0.754 seconds
b'Complexity is O(2^n)\n'




-./factorial
diff 1.0 coef 1.020286606338815
T(n-1)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./factorial/traces -maxdeg 5 -r -nlog
b'Polynomial relation:  1
k=0 p=0
'
T(n) = T(n-1) +  (n^0(logn)^0)
Solving the recurrence relation
Analysis complete in 0.697 seconds
b'Complexity is O(n^1)\n'




-./fibonacci
diff 2.0 coef 1.7212868984408163
T(n-2)
diff 1.0 coef 1.355390223669382
T(n-1)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./fibonacci/traces -maxdeg 5 -r -nlog
b'Polynomial relation:  1
k=0 p=0
'
T(n) = T(n-2) +  T(n-1) +  (n^0(logn)^0)
Solving the recurrence relation
Analysis complete in 0.619 seconds
b'Complexity is O(2^n)\n'




-./hanoi
diff 1.0 coef 1.3859558754582484
T(n-1)
diff 1.0 coef 1.3893378951907378
T(n-1)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./hanoi/traces -maxdeg 5 -r -nlog
b'Polynomial relation:  1
k=0 p=0
'
T(n) = T(n-1) +  T(n-1) +  (n^0(logn)^0)
Solving the recurrence relation
Analysis complete in 0.652 seconds
b'Complexity is O(2^n)\n'




-./heap_sort
diff 8.0 coef 1.6880358782950025
T(n/2)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./heap_sort/traces -maxdeg 5 -r -nlog
b'models before applying heuristics
 
399.4
 
1.5 x - 1.265
            2
-1.566e-06 x + 1.501 x - 1.337
            3             2
-1.265e-08 x + 7.889e-06 x + 1.499 x - 1.257
           4             3             2
-3.05e-11 x + 1.769e-08 x - 1.939e-06 x + 1.5 x - 1.287
            5             4             3             2
-8.355e-13 x + 1.022e-09 x - 4.578e-07 x + 8.975e-05 x + 1.493 x - 1.164
Models after applying Heuristics  [poly1d([399.35]), poly1d([ 1.49998177, -1.26513091])]
r2_scores  [-0.016705662733976556, 0.9999985021686417]
log:  
1 x - 7.453e-14, r2_score -4.343622581409952
-4.343622581409952
Analysis complete in 0.002311229705810547 seconds
Polynomial relation:  n^1
k=1 p=0
'
T(n) = T(n/2) +  (n^1(logn)^0)
Solving the recurrence relation
Analysis complete in 1.839 seconds
b'Complexity is O(n^1 (logn)^0)\n'




-./inorder
diff 3.0 coef 2.299659152255382
T(n/2)
diff 3.0 coef 2.523958053822689
T(n/3)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./inorder/traces -maxdeg 5 -r -nlog
b'Polynomial relation:  1
k=0 p=0
'
T(n) = T(n/2) +  T(n/3) +  (n^0(logn)^0)
Solving the recurrence relation
Analysis complete in 0.690 seconds
b'Complexity is O(n^1.0)\n'




-./insertion_sort
diff 1.0 coef 1.0213642784348154
T(n-1)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./insertion_sort/traces -maxdeg 5 -r -nlog
b'models before applying heuristics
 
127.3
 
0.4778 x + 0.05464
           2
0.0002927 x + 0.3258 x + 13.67
           3            2
7.917e-06 x - 0.005753 x + 1.557 x - 38.5
           4             3            2
4.643e-08 x - 3.936e-05 x + 0.009818 x - 0.2373 x + 8.077
          5             4             3            2
1.09e-10 x - 8.928e-08 x + 2.075e-05 x - 0.001433 x + 0.5709 x - 5.815
Models after applying Heuristics  [poly1d([127.31]), poly1d([0.47775703, 0.05463648])]
r2_scores  [-0.004275420472754865, 0.41135097737412096]
log:  
1 x - 2.945e-16, r2_score -1.683370062209546
-1.683370062209546
Analysis complete in 0.002363920211791992 seconds
Polynomial relation:  n^1
k=1 p=0
'
T(n) = T(n-1) +  (n^1(logn)^0)
Solving the recurrence relation
Analysis complete in 0.697 seconds
b'Complexity is O(n^2)\n'




-./karatsuba
diff 2.0 coef 1.8149535828103598
T(n/2)
diff 1.0 coef 1.7242405264802638
T(n/2)
diff 1.0 coef 1.513315080450185
T(n/2)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./karatsuba/traces -maxdeg 5 -r -nlog
b'Polynomial relation:  1
k=0 p=0
'
T(n) = T(n/2) +  T(n/2) +  T(n/2) +  (n^0(logn)^0)
Solving the recurrence relation
Analysis complete in 0.668 seconds
b'Complexity is O(n^1.5849625007211563)\n'




-./merge_sort
diff 4.0 coef 2.1197049611091057
T(n/2)
diff 2.0 coef 1.7507418532477617
T(n/2)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./merge_sort/traces -maxdeg 5 -r -nlog
b'models before applying heuristics
 
239.4
 
1 x - 8.209e-15
            2
-7.824e-19 x + 1 x + 2.274e-14
           3            2
5.662e-21 x - 2.12e-19 x + 1 x
           4            3             2
5.546e-23 x - 4.58e-20 x + 1.267e-17 x + 1 x + 6.253e-14
            5             4             3             2
-1.973e-25 x + 1.556e-22 x - 2.126e-20 x - 2.597e-18 x + 1 x + 7.39e-14
Models after applying Heuristics  [poly1d([239.44]), poly1d([ 1.00000000e+00, -8.20903419e-15])]
r2_scores  [-0.008770769109389676, 1.0]
log:  
1 x + 4.315e-14, r2_score -3.597811629545977
-3.597811629545977
Analysis complete in 0.0023920536041259766 seconds
Polynomial relation:  n^1
k=1 p=0
'
T(n) = T(n/2) +  T(n/2) +  (n^1(logn)^0)
Solving the recurrence relation
Analysis complete in 0.718 seconds
b'Complexity is O(n^1.0 logn)\n'




-./postorder
diff 3.0 coef 2.2744905797692816
T(n/2)
diff 3.0 coef 2.465793187283216
T(n/2)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./postorder/traces -maxdeg 5 -r -nlog
b'Polynomial relation:  1
k=0 p=0
'
T(n) = T(n/2) +  T(n/2) +  (n^0(logn)^0)
Solving the recurrence relation
Analysis complete in 0.689 seconds
b'Complexity is O(n^1.0)\n'




-./qsortassert
diff 4.0 coef 15.5457141916125
T(n/16)
diff 4.0 coef 3.957183858695549
T(n/4)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./qsortassert/traces -maxdeg 5 -r -nlog
b'models before applying heuristics
 
245.5
 
1 x - 1
           2
8.844e-19 x + 1 x - 1
            3             2
-6.956e-21 x + 4.204e-18 x + 1 x - 1
           4             3             2
6.235e-24 x - 4.961e-22 x - 1.839e-18 x + 1 x - 1
           5            4            3             2
-1.56e-25 x + 1.61e-22 x - 5.83e-20 x + 9.774e-18 x + 1 x - 1
Models after applying Heuristics  [poly1d([245.48]), poly1d([ 1., -1.])]
r2_scores  [-0.00010911143229574982, 1.0]
log:  
1 x + 5.192e-14, r2_score -3.083018594237977
-3.083018594237977
Analysis complete in 0.002582073211669922 seconds
Polynomial relation:  n^1
k=1 p=0
'
T(n) = T(n/16) +  T(n/4) +  (n^1(logn)^0)
Solving the recurrence relation
Analysis complete in 0.694 seconds
b'Complexity is O(n^1 (logn)^0)\n'




-./quick_sort
diff 3.0 coef 20.813026821165465
T(n/21)
diff 2.0 coef 1.4954248366013072
T(n-2)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./quick_sort/traces -maxdeg 5 -r -nlog
b'Polynomial relation:  1
k=0 p=0
'
T(n) = T(n/21) +  T(n-2) +  (n^0(logn)^0)
Solving the recurrence relation
Analysis complete in 0.757 seconds
b'Complexity is O(2^n)\n'




-./reverse_stack
diff 1.0 coef 1.0209277707402864
T(n-1)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./reverse_stack/traces -maxdeg 5 -r -nlog
b'models before applying heuristics
 
241.3
 
1 x + 1
           2
-4.47e-19 x + 1 x + 1
            3             2
-6.333e-21 x + 3.874e-18 x + 1 x + 1
            4             3             2
-2.782e-23 x + 2.529e-20 x - 8.877e-18 x + 1 x + 1
            5             4             3             2
-7.295e-26 x + 1.588e-22 x - 8.388e-20 x + 1.442e-17 x + 1 x + 1
Models after applying Heuristics  [poly1d([241.32]), poly1d([1., 1.])]
r2_scores  [-0.0019364951856839507, 1.0]
log:  
1 x - 2.179e-14, r2_score -2.2312891703683086
-2.2312891703683086
Analysis complete in 0.002404451370239258 seconds
Polynomial relation:  n^1
k=1 p=0
'
T(n) = T(n-1) +  (n^1(logn)^0)
Solving the recurrence relation
Analysis complete in 0.696 seconds
b'Complexity is O(n^2)\n'




-./selection_sort
diff 1.0 coef 1.020877888611279
T(n-1)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./selection_sort/traces -maxdeg 5 -r -nlog
b'models before applying heuristics
 
237.4
 
1 x - 1
           2
1.049e-18 x + 1 x - 1
           3           2
7.989e-21 x - 8.7e-19 x + 1 x - 1
           4            3             2
-4.39e-23 x + 4.81e-20 x - 1.588e-17 x + 1 x - 1
            5            4             3             2
-2.175e-25 x + 2.52e-22 x - 9.157e-20 x + 1.191e-17 x + 1 x - 1
Models after applying Heuristics  [poly1d([237.42]), poly1d([ 1., -1.])]
r2_scores  [-0.016800077252540735, 1.0]
log:  
1 x + 1.101e-14, r2_score -3.550301417253909
-3.550301417253909
Analysis complete in 0.0025641918182373047 seconds
Polynomial relation:  n^1
k=1 p=0
'
T(n) = T(n-1) +  (n^1(logn)^0)
Solving the recurrence relation
Analysis complete in 0.687 seconds
b'Complexity is O(n^2)\n'




-./stack_sort
diff 1.0 coef 1.0230703186391146
T(n-1)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./stack_sort/traces -maxdeg 5 -r -nlog
b'models before applying heuristics
 
127.3
 
0.5015 x + 3.839
           2
0.0001355 x + 0.4308 x + 10.7
           3            2
4.088e-06 x - 0.002993 x + 1.089 x - 22.88
          4             3           2
4.55e-08 x - 4.242e-05 x + 0.01252 x - 0.7727 x + 34.91
          5             4             3           2
5.39e-10 x - 6.386e-07 x + 0.0002682 x - 0.04783 x + 3.866 x - 58.02
Models after applying Heuristics  [poly1d([127.35]), poly1d([0.50148489, 3.83928739])]
r2_scores  [-0.012481605620543457, 0.3977076177760466]
log:  
1 x - 2.364e-15, r2_score -1.1643468341404004
-1.1643468341404004
Analysis complete in 0.0025207996368408203 seconds
Polynomial relation:  n^1
k=1 p=0
'
T(n) = T(n-1) +  (n^1(logn)^0)
Solving the recurrence relation
Analysis complete in 0.709 seconds
b'Complexity is O(n^2)\n'




-./strassen
diff 2.0 coef 1.9984976226991318
T(n/2)
diff 2.0 coef 1.9991723798649534
T(n/2)
diff 2.0 coef 1.9992532115754307
T(n/2)
diff 2.0 coef 1.9995765747231034
T(n/2)
diff 2.0 coef 1.9984148977415064
T(n/2)
diff 2.0 coef 1.999805093610152
T(n/2)
diff 2.0 coef 1.9990441240827126
T(n/2)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./strassen/traces -maxdeg 5 -r -nlog
b'models before applying heuristics
 
1867
 
202.5 x - 907.6
      2
5.75 x + 1 x + 2
           3        2
1.888e-16 x + 5.75 x + 1 x + 2
           4            3        2
7.152e-17 x - 4.81e-15 x + 5.75 x + 1 x + 2
           5             4           3         2
8.804e-06 x - 0.0005458 x + 0.01092 x + 5.663 x + 1.279 x + 1.712
Models after applying Heuristics  [poly1d([1866.51]), poly1d([ 202.48627319, -907.55194277]), poly1d([5.75, 1.  , 2.  ])]
r2_scores  [-0.018404337047092323, 0.9458482253749965, 1.0]
log:  
1 x + 4.254e-13, r2_score -0.4809783123704554
-0.4809783123704554
Analysis complete in 0.00273895263671875 seconds
Polynomial relation:  n^2
k=2 p=0
'
T(n) = T(n/2) +  T(n/2) +  T(n/2) +  T(n/2) +  T(n/2) +  T(n/2) +  T(n/2) +  (n^2(logn)^0)
Solving the recurrence relation
Analysis complete in 1.469 seconds
b'Complexity is O(n^2.807354922057604)\n'




-./subset_sum
diff -1.0 coef 1.0404932047246893
T(n-1)
diff -1.0 coef 1.0437478321541394
T(n-1)
Computing polynomial relations
Command:  /home/dishimwe/dishimwe/complexity-recurrence/dig.py -trace ./subset_sum/traces -maxdeg 5 -r -nlog
b'models before applying heuristics
 
1.5
 
-0.004474 x + 1.527
          2
0.003185 x - 0.04331 x + 1.626
           3           2
-0.003981 x + 0.07513 x - 0.4293 x + 2.212
           4           3          2
-0.001329 x + 0.02808 x - 0.1935 x + 0.478 x + 1.202
            5          4          3         2
-0.0006793 x + 0.0191 x - 0.2036 x + 1.033 x - 2.506 x + 3.833
Models after applying Heuristics  [poly1d([1.5])]
r2_scores  [0.0]
log:  
1 x - 7.786e-18, r2_score 0.0
-1
Analysis complete in 0.002216815948486328 seconds
Polynomial relation:  n^0
k=0 p=0
'
T(n) = T(n-1) +  T(n-1) +  (n^0(logn)^0)
Solving the recurrence relation
Analysis complete in 0.804 seconds
b'Complexity is O(2^n)\n'




